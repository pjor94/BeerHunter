plugins {
	id 'org.springframework.boot' version '2.4.1'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'idea'

}



group = 'it.pjor94'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	antlr
	compile.extendsFrom antlr
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }

}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	antlr "org.antlr:antlr4:4.7.1"
	implementation "org.antlr:antlr4-runtime:4.7.1"
	implementation 'commons-collections:commons-collections:3.2.2'
	implementation 'io.jsonwebtoken:jjwt:0.9.0'
	implementation 'javax.xml.bind:jaxb-api:2.3.0'
	implementation 'org.ta4j:ta4j-core:0.13'
	compileOnly 'org.projectlombok:lombok:1.18.16'
	implementation 'com.github.binance-exchange:binance-java-api:master-SNAPSHOT'
	implementation 'org.apache.poi:poi-ooxml:4.1.2'

}
def destDir = "${project.projectDir}/src/main/generated/java/it/pjor94/parser"
def genDir ="${project.projectDir}/src/main/generated/java"
def resourcesDir = "${project.projectDir}/src/main/resources/token"
def generatedSourcesDir = file(genDir)

sourceSets {
	main {
		java { srcDir genDir  }
		output.dir(resourcesDir, builtBy: 'copyGeneratedTokens')
	}

}
idea {
	module {
		sourceDirs += generatedSourcesDir
		generatedSourceDirs += generatedSourcesDir
	}
}

test{
	minHeapSize = "128m"
	maxHeapSize = "4096m"
}

task generateParser(type: JavaExec) {
	def outputDir = "${buildDir}/generated-sources/antlr4"
	def target = "${project.projectDir}/src/main/antlr4/Strategy.g4"
	inputs.file target
	outputs.dir outputDir
	workingDir = 'grammars'
	classpath = configurations.antlr
	args += [
			'-o',
			outputDir,
			'-package',
			'it.pjor94.parser',
			target
	]
	main = 'org.antlr.v4.Tool'
}

task copyGeneratedParser(type: Sync, dependsOn: generateParser) {
	from generateParser
	into destDir
	include '**/*.java'
}
task copyGeneratedTokens(type: Sync, dependsOn: generateParser) {
	from generateParser
	into resourcesDir
	include '**/*.tokens'
}

compileJava.dependsOn copyGeneratedParser, copyGeneratedTokens
clean.doFirst {
	delete "${project.projectDir}/src/main/generated/java"
	delete fileTree(resourcesDir) {
		include '**/*.tokens'
	}

}

test {
	useJUnitPlatform()
}
